/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        ctrl_spc_as_gui {
            bindings = <&kp LEFT_GUI>;
            key-positions = <24 38>;
        };
    };

    behaviors {
        dscw: double_shift_capsword {
            compatible = "zmk,behavior-tap-dance";
            label = "Double shift capsword";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // |  ESC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | CTRL |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&dscw      &kp A  &kp S  &kp D         &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LEFT_ALT  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp LGUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     | CTRL |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&trans          &kp N1    &kp N2  &kp N3  &kp N4  &kp N5       &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &kp BSPC
&kp LEFT_SHIFT  &trans    &trans  &trans  &trans  &trans       &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&kp LCTRL       &kp LGUI  &trans  &trans  &trans  &trans       &trans    &trans    &trans  &trans     &trans  &trans
                                  &mo 4   &mo 1   &kp SPACE    &kp RET   &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  ~   |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | `    |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |      |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" | CTRL |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&kp TILDE   &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER  &kp BSPC
&kp GRAVE   &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp PLUS   &kp LBKT              &kp RBKT               &kp PIPE   &kp EQUAL
&kp LSHIFT  &trans    &trans  &trans    &trans    &trans       &kp FSLH   &kp ASTRK  &kp LBRC              &kp RBRC               &kp BSLH   &kp LCTRL
                              &trans    &trans    &kp SPACE    &kp ENTER  &trans     &trans
            >;
        };

        TRI {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_DIVIDE    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_N9        &kp KP_SUBTRACT  &kp BACKSPACE
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_MULTIPLY  &kp KP_NUMBER_4  &kp KP_N5        &kp KP_NUMBER_6  &kp KP_PLUS      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans           &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_N3        &kp KP_DOT       &trans
                        &trans  &trans  &trans    &kp KP_ENTER     &trans           &kp KP_N0
            >;

            label = "Tri-layer";
        };

        BT {
            bindings = <
&bt BT_CLR  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
